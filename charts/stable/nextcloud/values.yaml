image:
  repository: tccr.io/truecharts/nextcloud
  pullPolicy: IfNotPresent
  tag: v24.0.1@sha256:371eb122673aa2ff2112ee819954262906b5f323fdedd5676de35ffc07d9be6c

securityContext:
  readOnlyRootFilesystem: false
  runAsNonRoot: false

podSecurityContext:
  runAsUser: 0
  runAsGroup: 0
  fsGroup: 33

service:
  main:
    ports:
      main:
        port: 10020
        targetPort: 80
  hpb:
    enabled: true
    ports:
      hpb:
        enabled: true
        port: 7867
        targetPort: 7867
secretEnv:
  NEXTCLOUD_ADMIN_USER: "admin"
  NEXTCLOUD_ADMIN_PASSWORD: "adminpass"

env:
  TRUSTED_PROXIES: "172.16.0.0/16"
  NEXTCLOUD_DATA_DIR: "/data"
  POSTGRES_DB: "{{ .Values.postgresql.postgresqlDatabase }}"
  POSTGRES_USER: "{{ .Values.postgresql.postgresqlUsername }}"
  POSTGRES_PASSWORD:
    secretKeyRef:
      name: dbcreds
      key: postgresql-password
  POSTGRES_HOST:
    secretKeyRef:
      name: dbcreds
      key: plainporthost
  REDIS_HOST:
    secretKeyRef:
      name: rediscreds
      key: plainhost
  REDIS_HOST_PASSWORD:
    secretKeyRef:
      name: rediscreds
      key: redis-password

additionalContainers:
  notify-push:
    env:
      NEXTCLOUD_URL: 'http://{{ include "tc.common.names.fullname" . }}'
      TRUSTED_PROXIES: "{{ .Values.env.TRUSTED_PROXIES }}"
      NEXTCLOUD_DATA_DIR: "{{ .Values.env.NEXTCLOUD_DATA_DIR }}"
      POSTGRES_DB: "{{ .Values.postgresql.postgresqlDatabase }}"
      POSTGRES_USER: "{{ .Values.postgresql.postgresqlUsername }}"
      POSTGRES_PASSWORD:
        secretKeyRef:
          name: dbcreds
          key: postgresql-password
      POSTGRES_HOST:
        secretKeyRef:
          name: dbcreds
          key: plainporthost
      REDIS_HOST:
        secretKeyRef:
          name: rediscreds
          key: plainhost
      REDIS_HOST_PASSWORD:
        secretKeyRef:
          name: rediscreds
          key: redis-password
    image: '{{ include "tc.common.images.selector" . }}'
    imagePullPolicy: '{{ .Values.image.pullPolicy }}'
    securityContext:
      "{{- tpl ( toYaml .Values.securityContext ) $ | nindent 4 }}"
    volumeMounts:
      '{{- (include "tc.common.controller.volumeMounts" . | trim) | nindent 4 }}'
    cmd: ["/var/www/html/custom_apps/notify_push/bin/x86_64/notify_push /var/www/html/config/config.php"]


envFrom:
  - configMapRef:
      name: nextcloudconfig

persistence:
  html:
    enabled: true
    mountPath: "/var/www/html"
  data:
    enabled: true
    mountPath: "/data"

probes:
  liveness:
    custom: true
    spec:
      httpGet:
        path: /status.php
        port: 80
        httpHeaders:
        - name: Host
          value: "test.fakedomain.dns"

  readiness:
    custom: true
    spec:
      httpGet:
        path: /status.php
        port: 80
        httpHeaders:
        - name: Host
          value: "test.fakedomain.dns"

  startup:
    custom: true
    spec:
      httpGet:
        path: /status.php
        port: 80
        httpHeaders:
        - name: Host
          value: "test.fakedomain.dns"

cronjob:
  schedule: "*/5 * * * *"
  annotations: {}
  failedJobsHistoryLimit: 5
  successfulJobsHistoryLimit: 2

postgresql:
  enabled: true
  existingSecret: "dbcreds"
  postgresqlUsername: nextcloud
  postgresqlDatabase: nextcloud

redis:
  enabled: true
  existingSecret: "rediscreds"
